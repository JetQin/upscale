plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'org.flywaydb.flyway' version '5.2.4'
	id "org.unbroken-dome.test-sets" version "2.1.1"
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.unbroken-dome.test-sets'

flyway {
	url = 'jdbc:postgresql://localhost:5432/postdb?currentSchema=upscale'
	user = 'dbuser'
	password = 'dbuser'
}

group = 'io.github.jetqin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://plugins.gradle.org/m2/' }
//	maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
//	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//	maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
}

testSets {
	integrationTest { dirName = 'groovy' }
}


sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/groovy/java')
		}
		resources.srcDir file('src/groovy/resources')
	}
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

ext {
	set('springCloudVersion', "Greenwich.SR1")
	set('swaggerVersion','2.9.2')
	set('lombokVersion', '1.18.8')
}

dependencies {
//	classpath "org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:2.1.1"

	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	compile("org.springframework.boot:spring-boot-starter-data-jpa"){
		exclude group: "org.hibernate", module: "hibernate-entitymanager"
		exclude group: "org.hibernate", module: "hibernate-core"
	}
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation('org.springframework.boot:spring-boot-starter-web'){
		exclude group: "org.hibernate.validator", module: "hibernate-validator"
	}
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
//	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
//	implementation 'org.springframework.kafka:spring-kafka'

	compile ("org.eclipse.persistence:eclipselink:2.7.4" ){
		exclude group:"org.eclipse.persistence", module:"javax.persistence"
	}
	compile "org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.4"
	compile "org.eclipse.persistence:javax.persistence:2.1.1"
    compile "org.flywaydb:flyway-core:5.2.4"
	compile "org.postgresql:postgresql"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	compile "io.springfox:springfox-swagger2:${swaggerVersion}"
	compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"

	compile "org.apache.httpcomponents:httpclient:4.5"


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testCompile "org.codehaus.groovy:groovy-all:2.4.11"
	testCompile "org.spockframework:spock-core:1.2-groovy-2.4"
	testCompile "com.github.tomakehurst:wiremock-jre8:2.23.2"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

//
//integrationTest {
//	useJUnit {
//		includeCategories 'integrationTest'
//	}
//	testLogging {
//		showStandardStreams = true
//	}
//}