plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'org.flywaydb.flyway' version '5.2.4'
	id 'java'
}

ext {
	set('springCloudVersion', "Greenwich.SR1")
	set('swaggerVersion','2.9.2')
	set('lombokVersion', '1.18.8')
}


apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'


flyway {
	url = 'jdbc:postgresql://localhost:5432/postdb?currentSchema=upscale'
	user = 'dbuser'
	password = 'dbuser'
}

group = 'io.github.jetqin'
version = '1.0.0'
sourceCompatibility = '1.8'


repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://plugins.gradle.org/m2/' }
//	maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
//	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//	maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
}

sourceSets {
	test {
		groovy {
			println "java.srcDirs = ${java.srcDirs}"
			println "resources.srcDirs = ${resources.srcDirs}"
			println "java.files = ${java.files.name}"
			println "allJava.files = ${allJava.files.name}"
			println "resources.files = ${resources.files.name}"
			println "allSource.files = ${allSource.files.name}"
			println "output.classesDir = ${output.classesDirs}"
			println "output.resourcesDir = ${output.resourcesDir}"
			println "output.files = ${output.files}"
			println "buildDir = $buildDir/classes"

			srcDir file('src/test/groovy')
		}
	}

	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/test/groovy')
		}
//		resources.srcDir file('src/integration-test/resources')
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

test {
	useJUnit()
//	filter {
//	}
}

task integrationTest(type: Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter test
}

check.dependsOn integrationTest

task display {
	doLast {
		println "outputDir: $buildDir"
		println "sourceSets.test.groovy.outputDir: ${sourceSets.test.groovy.outputDir}"
		println "compileGroovy.destinationDir:     ${compileGroovy.destinationDir}"
	}
}


dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	compile("org.springframework.boot:spring-boot-starter-data-jpa"){
		exclude group: "org.hibernate", module: "hibernate-entitymanager"
		exclude group: "org.hibernate", module: "hibernate-core"
	}
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation('org.springframework.boot:spring-boot-starter-web'){
		exclude group: "org.hibernate.validator", module: "hibernate-validator"
	}
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.kafka:spring-kafka'

	compile ("org.eclipse.persistence:eclipselink:2.7.4" ){
		exclude group:"org.eclipse.persistence", module:"javax.persistence"
	}
	compile "org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.4"
	compile "org.eclipse.persistence:javax.persistence:2.1.1"
    compile "org.flywaydb:flyway-core:5.2.4"
	compile "org.postgresql:postgresql"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	compile "io.springfox:springfox-swagger2:${swaggerVersion}"
	compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"

	compile "org.apache.httpcomponents:httpclient:4.5"


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation "org.codehaus.groovy:groovy-all:2.5.7"
	testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
	testCompile "com.github.tomakehurst:wiremock-jre8:2.23.2"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
